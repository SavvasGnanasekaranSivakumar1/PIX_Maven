/*
 * Generated by XDoclet - Do not edit!
 */
package com.pearson.pix.business.admin.interfaces;

import java.util.HashMap;
import java.util.Vector;

import com.pearson.pix.dto.admin.Party;
import com.pearson.pix.dto.admin.User;
import com.pearson.pix.dto.admin.UserCountDTO;
import com.pearson.pix.exception.AppException;
/**
 * Local interface for Admin.
 * @xdoclet-generated at ${TODAY}
 * @copyright The XDoclet Team
 * @author XDoclet
 * @version ${version}
 * @author shweta.g
 */
public interface AdminLocal
   extends javax.ejb.EJBLocalObject
{
	/**
     * An example business method
     * @throws EJBException Thrown if method fails due to system-level error.    */
	public void replaceWithRealBusinessMethod(  ) throws javax.ejb.EJBException;
   
	/**
	 * Method to get the basic information of user to be shown intially in drop-downs etc.
	 * 
	 * @return java.util.HashMap
	 * @J2EE_METHOD  --  getBasicUserInfo
	 */
	public java.util.HashMap getBasicUserInfo() throws AppException;
	
	/**
     * Method to get the basic module information of user to be shown. 
     * @return java.util.Collection
     * @J2EE_METHOD  --  getUserModuleInfo
     */
    
    public Vector getUserModuleInfo() throws AppException;
	
   
	/**
	 * Saves the Details of the user
	 * 
	 * @param objUser
	 * @return java.lang.String
	 * @J2EE_METHOD  --  saveUserDetail
	 */
	public String saveUserDetail(User objUser) throws AppException;
	
	/**
	 * Business method for displaying the User Detail
	 * 
	 * @param login
	 * @return com.pearson.pix.dto.admin.User
	 * @J2EE_METHOD  --  displayUserDetail
	 */
	public User displayUserDetail(Integer login) throws AppException;
	
	/**
	 * Business method for displaying the Modified User Detail
	 * 
	 * @param login
	 * @return com.pearson.pix.dto.admin.User
	 * @J2EE_METHOD  --  displayModifiedUserDetail
	 */
	public User displayModifiedUserDetail(Integer login, String tokenTab) throws AppException;
   
	/**
     * Business method for displaying the Users List. This method also takes care of filtering,
     *  pagination and history display by passing page no, filter criteria and its value,
     *  history flag respectively.
     * 
     * @param user
     * @param startDate
     * @param endDate
     * @param currentValue
     * @param objOrderBy
     * @param objSort 
     * @return java.util.Collection
     * @J2EE_METHOD  --  displayUsersList
     */
	
	public Vector displayUsersList(User user,String startDate,String endDate,int currentValue,String objOrderBy,String objSort) throws AppException;
	
	/**
	 * Updates the Details of the user
	 * 
	 * @param user
	 * @return java.lang.String
	 * @J2EE_METHOD  -- updateUserDetail
	 */
	
	public String updateUserDetail(User user) throws AppException;
	
	/**
     * Method to delete the user from the database. 
     * 
     * @param userId
     * @return java.lang.String
     * @J2EE_METHOD  --deleteUser
     */
    
    public String deleteUser(Integer userId) throws AppException;
    
    /**
	 * Method to get the basic information of party to be shown intially in drop-downs etc.
	 * 
	 * @return java.util.HashMap
	 * @J2EE_METHOD  --  getBasicPartyInfo
	 */
	public java.util.HashMap getBasicPartyInfo() throws AppException;
    
	/**
	 * Method to get the basic information of partyTransport to be shown intially in drop-downs 
	 * etc.
	 * 
	 * @return java.util.LinkedHashMap
	 * @throws AppException 
	 */
	 
	public java.util.LinkedHashMap getBasicPartyTransportInfo() throws AppException; 
	
	/**
	 * Saves the Details of the party
	 * 
	 * @param party
	 * @return java.lang.string
	 * @J2EE_METHOD  --  savePartyDetail
	 */
	
	public String savePartyDetail(Party party) throws AppException;
   
	/**
	 * Business method for displaying the Party Detail
	 * 
	 * @param san
	 * @return com.pearson.pix.dto.admin.Party
	 * @J2EE_METHOD  --  displayPartyDetail
	 */
	public Party displayPartyDetail (String san) throws AppException;
   
	/**
     * Business method for displaying the Parties List. This method also takes care of filtering,
     *  pagination and history display by passing page no, filter criteria and its value,
     *  history flag respectively.
     * 
     * @param adminParty
     * @param startDate
     * @param endDate
     * @param currentValue
     * @param objOrderBy
     * @param objSort
     * @return java.util.Collection
     * @J2EE_METHOD  --  displayPartiesList
     */
	
	public Vector displayPartiesList(Party adminParty,String startDate,String endDate,int currentValue,String objOrderBy,String objSort) throws AppException;
	
	/**
	 * Updates the Details of the party
	 * 
	 * @param party
	 * @return java.lang.String
	 * @J2EE_METHOD  -- updatePartyDetail
	 */
	
	public String updatePartyDetail(Party party) throws AppException;
   
	/**
	 * Method to authenticate user
	 *
	 * @param user
	 * @return com.pearson.pix.dto.admin.User
	 */
	public User authenticateUser(User user) throws AppException;

	 
	/**
	 * Method to send Email
	 *
	 * @param user
	 */
    public void sendEmail(String login)throws AppException;

    /**
   	 * method to verify password
   	 *
   	 * @param userid
   	 * @param pass
   	 * @return   java.lang.String 
   	*/
    public String getPasswordInfo(Integer userid,String pass)throws AppException;
    
    
    public UserCountDTO accountLock(HashMap userCount,String loginid) throws AppException;
}
